[0.000000] (-) TimerEvent: {}
[0.000172] (-) JobUnselected: {'identifier': 'sensor_simulator'}
[0.000202] (rovc_comm_mqtt) JobQueued: {'identifier': 'rovc_comm_mqtt', 'dependencies': OrderedDict()}
[0.000245] (rovc_comm_mqtt) JobStarted: {'identifier': 'rovc_comm_mqtt'}
[0.009653] (rovc_comm_mqtt) JobProgress: {'identifier': 'rovc_comm_mqtt', 'progress': 'cmake'}
[0.010730] (rovc_comm_mqtt) JobProgress: {'identifier': 'rovc_comm_mqtt', 'progress': 'build'}
[0.010765] (rovc_comm_mqtt) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/luka/ros2_diplpro/build/rovc_comm_mqtt', '--', '-j6', '-l6'], 'cwd': '/home/luka/ros2_diplpro/build/rovc_comm_mqtt', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'luka'), ('LC_TIME', 'hr_HR.UTF-8'), ('XDG_SESSION_TYPE', 'x11'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/luka/ros2_ws/install/marinero_steering_controller/lib:/home/luka/ros2_ws/install/velocity_controllers/lib:/home/luka/ros2_ws/install/tricycle_steering_controller/lib:/home/luka/ros2_ws/install/tricycle_controller/lib:/home/luka/ros2_ws/install/bicycle_steering_controller/lib:/home/luka/ros2_ws/install/ackermann_steering_controller/lib:/home/luka/ros2_ws/install/steering_controllers_library/lib:/home/luka/ros2_ws/install/range_sensor_broadcaster/lib:/home/luka/ros2_ws/install/position_controllers/lib:/home/luka/ros2_ws/install/pid_controller/lib:/home/luka/ros2_ws/install/admittance_controller/lib:/home/luka/ros2_ws/install/joint_trajectory_controller/lib:/home/luka/ros2_ws/install/joint_state_broadcaster/lib:/home/luka/ros2_ws/install/imu_sensor_broadcaster/lib:/home/luka/ros2_ws/install/gripper_controllers/lib:/home/luka/ros2_ws/install/effort_controllers/lib:/home/luka/ros2_ws/install/forward_command_controller/lib:/home/luka/ros2_ws/install/force_torque_sensor_broadcaster/lib:/home/luka/ros2_ws/install/diff_drive_controller/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/luka'), ('OLDPWD', '/home/luka/ros2_diplpro/log'), ('DESKTOP_SESSION', 'ubuntu'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('LC_MONETARY', 'hr_HR.UTF-8'), ('DBUS_STARTER_BUS_TYPE', 'session'), ('SYSTEMD_EXEC_PID', '1296'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus,guid=59facfd4d97e89756defcd4e68596b03'), ('COLORTERM', 'truecolor'), ('COLCON_PREFIX_PATH', '/home/luka/ros2_diplpro/install:/home/luka/ros2_ws/install'), ('GTK_IM_MODULE', 'ibus'), ('LOGNAME', 'luka'), ('_', '/usr/bin/colcon'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'luka'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('WINDOWPATH', '2'), ('PATH', '/opt/ros/humble/bin:/home/luka/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/luka-pc:@/tmp/.ICE-unix/1296,unix/luka-pc:/tmp/.ICE-unix/1296'), ('XDG_MENU_PREFIX', 'gnome-'), ('LC_ADDRESS', 'hr_HR.UTF-8'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/245f83e3_e258_4b8d_ba54_c0adc7249bc3'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('LC_TELEPHONE', 'hr_HR.UTF-8'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.128'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/luka/ros2_ws/install/marinero_steering_controller:/home/luka/ros2_ws/install/ros2_controllers:/home/luka/ros2_ws/install/velocity_controllers:/home/luka/ros2_ws/install/tricycle_steering_controller:/home/luka/ros2_ws/install/tricycle_controller:/home/luka/ros2_ws/install/teleop_controller:/home/luka/ros2_ws/install/bicycle_steering_controller:/home/luka/ros2_ws/install/ackermann_steering_controller:/home/luka/ros2_ws/install/steering_controllers_library:/home/luka/ros2_ws/install/rqt_joint_trajectory_controller:/home/luka/ros2_ws/install/ros2_controllers_test_nodes:/home/luka/ros2_ws/install/range_sensor_broadcaster:/home/luka/ros2_ws/install/position_controllers:/home/luka/ros2_ws/install/pid_controller:/home/luka/ros2_ws/install/marinero_mqtt:/home/luka/ros2_ws/install/marinero_launch:/home/luka/ros2_ws/install/marinero_description:/home/luka/ros2_ws/install/marinero_battery:/home/luka/ros2_ws/install/admittance_controller:/home/luka/ros2_ws/install/joint_trajectory_controller:/home/luka/ros2_ws/install/joint_state_broadcaster:/home/luka/ros2_ws/install/imu_sensor_broadcaster:/home/luka/ros2_ws/install/gripper_controllers:/home/luka/ros2_ws/install/effort_controllers:/home/luka/ros2_ws/install/forward_command_controller:/home/luka/ros2_ws/install/force_torque_sensor_broadcaster:/home/luka/ros2_ws/install/diff_drive_controller:/home/luka/ros2_diplpro/install/sensor_simulator:/home/luka/ros2_diplpro/install/rovc_comm_mqtt:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('LC_NAME', 'hr_HR.UTF-8'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('LC_MEASUREMENT', 'hr_HR.UTF-8'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('LC_IDENTIFICATION', 'hr_HR.UTF-8'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/luka/ros2_diplpro/build/rovc_comm_mqtt'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('DBUS_STARTER_ADDRESS', 'unix:path=/run/user/1000/bus,guid=59facfd4d97e89756defcd4e68596b03'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/luka/ros2_ws/build/teleop_controller:/home/luka/ros2_ws/install/teleop_controller/lib/python3.10/site-packages:/home/luka/ros2_ws/build/rqt_joint_trajectory_controller:/home/luka/ros2_ws/install/rqt_joint_trajectory_controller/lib/python3.10/site-packages:/home/luka/ros2_ws/build/ros2_controllers_test_nodes:/home/luka/ros2_ws/install/ros2_controllers_test_nodes/lib/python3.10/site-packages:/home/luka/ros2_ws/build/marinero_mqtt:/home/luka/ros2_ws/install/marinero_mqtt/lib/python3.10/site-packages:/home/luka/ros2_ws/build/marinero_battery:/home/luka/ros2_ws/install/marinero_battery/lib/python3.10/site-packages:/home/luka/ros2_diplpro/build/sensor_simulator:/home/luka/ros2_diplpro/install/sensor_simulator/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('LC_NUMERIC', 'hr_HR.UTF-8'), ('LC_PAPER', 'hr_HR.UTF-8'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/luka/ros2_ws/install/marinero_steering_controller:/home/luka/ros2_ws/install/ros2_controllers:/home/luka/ros2_ws/install/velocity_controllers:/home/luka/ros2_ws/install/tricycle_steering_controller:/home/luka/ros2_ws/install/tricycle_controller:/home/luka/ros2_ws/install/bicycle_steering_controller:/home/luka/ros2_ws/install/ackermann_steering_controller:/home/luka/ros2_ws/install/steering_controllers_library:/home/luka/ros2_ws/install/range_sensor_broadcaster:/home/luka/ros2_ws/install/position_controllers:/home/luka/ros2_ws/install/pid_controller:/home/luka/ros2_ws/install/marinero_launch:/home/luka/ros2_ws/install/marinero_description:/home/luka/ros2_ws/install/admittance_controller:/home/luka/ros2_ws/install/joint_trajectory_controller:/home/luka/ros2_ws/install/joint_state_broadcaster:/home/luka/ros2_ws/install/imu_sensor_broadcaster:/home/luka/ros2_ws/install/gripper_controllers:/home/luka/ros2_ws/install/effort_controllers:/home/luka/ros2_ws/install/forward_command_controller:/home/luka/ros2_ws/install/force_torque_sensor_broadcaster:/home/luka/ros2_ws/install/diff_drive_controller:/home/luka/ros2_diplpro/install/rovc_comm_mqtt:/home/luka/ros2_ws/install/teleop_controller:/home/luka/ros2_ws/install/rqt_joint_trajectory_controller:/home/luka/ros2_ws/install/ros2_controllers_test_nodes:/home/luka/ros2_ws/install/marinero_mqtt:/home/luka/ros2_ws/install/marinero_battery:/home/luka/ros2_diplpro/install/sensor_simulator:/opt/ros/humble')]), 'shell': False}
[0.058796] (rovc_comm_mqtt) StdoutLine: {'line': b'\x1b[35m\x1b[1mConsolidate compiler generated dependencies of target pub_node\x1b[0m\n'}
[0.073504] (rovc_comm_mqtt) StdoutLine: {'line': b'[ 66%] Built target publisher_node\n'}
[0.073651] (rovc_comm_mqtt) StdoutLine: {'line': b'[ 66%] Built target subscriber_node\n'}
[0.077522] (rovc_comm_mqtt) StdoutLine: {'line': b'[ 83%] \x1b[32mBuilding CXX object CMakeFiles/pub_node.dir/src/pub_node.cpp.o\x1b[0m\n'}
[0.099437] (-) TimerEvent: {}
[0.199672] (-) TimerEvent: {}
[0.299918] (-) TimerEvent: {}
[0.400173] (-) TimerEvent: {}
[0.500414] (-) TimerEvent: {}
[0.600664] (-) TimerEvent: {}
[0.700925] (-) TimerEvent: {}
[0.801217] (-) TimerEvent: {}
[0.901461] (-) TimerEvent: {}
[1.001716] (-) TimerEvent: {}
[1.101971] (-) TimerEvent: {}
[1.202202] (-) TimerEvent: {}
[1.302445] (-) TimerEvent: {}
[1.402692] (-) TimerEvent: {}
[1.502944] (-) TimerEvent: {}
[1.603197] (-) TimerEvent: {}
[1.703449] (-) TimerEvent: {}
[1.803705] (-) TimerEvent: {}
[1.903957] (-) TimerEvent: {}
[2.004204] (-) TimerEvent: {}
[2.104460] (-) TimerEvent: {}
[2.204796] (-) TimerEvent: {}
[2.205708] (rovc_comm_mqtt) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:1321\x1b[m\x1b[K,\n'}
[2.205841] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[2.205897] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[2.205948] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.205996] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:1\x1b[m\x1b[K:\n'}
[2.206043] (rovc_comm_mqtt) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kauto rclcpp::Node::declare_parameter(const string&, const ParameterT&, const ParameterDescriptor&, bool) [with ParameterT = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >; std::string = std::__cxx11::basic_string<char>; rcl_interfaces::msg::ParameterDescriptor = rcl_interfaces::msg::ParameterDescriptor_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.206095] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:44:28:\x1b[m\x1b[K   required from here\n'}
[2.206155] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:204:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Krclcpp::ParameterValue::ParameterValue(const std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.206207] (rovc_comm_mqtt) StderrLine: {'line': b'  204 |       rclcpp::\x1b[01;31m\x1b[KParameterValue(default_value)\x1b[m\x1b[K,\n'}
[2.206253] (rovc_comm_mqtt) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.206298] (rovc_comm_mqtt) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:26\x1b[m\x1b[K,\n'}
[2.206344] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_interfaces/node_parameters_interface.hpp:28\x1b[m\x1b[K,\n'}
[2.206389] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:54\x1b[m\x1b[K,\n'}
[2.206435] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[2.206480] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[2.206525] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.206570] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:1\x1b[m\x1b[K:\n'}
[2.206615] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:121:12:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::ParameterValue::ParameterValue(const std::vector<std::__cxx11::basic_string<char> >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.206662] (rovc_comm_mqtt) StderrLine: {'line': b'  121 |   explicit \x1b[01;36m\x1b[KParameterValue\x1b[m\x1b[K(const std::vector<std::string> & string_array_value);\n'}
[2.206707] (rovc_comm_mqtt) StderrLine: {'line': b'      |            \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.206752] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:121:60:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::vector<std::__cxx11::basic_string<char> >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.206800] (rovc_comm_mqtt) StderrLine: {'line': b'  121 |   explicit ParameterValue(\x1b[01;36m\x1b[Kconst std::vector<std::string> & string_array_value\x1b[m\x1b[K);\n'}
[2.206845] (rovc_comm_mqtt) StderrLine: {'line': b'      |                           \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.206890] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:118:12:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::ParameterValue::ParameterValue(const std::vector<double, std::allocator<double> >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.206941] (rovc_comm_mqtt) StderrLine: {'line': b'  118 |   explicit \x1b[01;36m\x1b[KParameterValue\x1b[m\x1b[K(const std::vector<double> & double_array_value);\n'}
[2.206988] (rovc_comm_mqtt) StderrLine: {'line': b'      |            \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.207033] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:118:55:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::vector<double, std::allocator<double> >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.207083] (rovc_comm_mqtt) StderrLine: {'line': b'  118 |   explicit ParameterValue(\x1b[01;36m\x1b[Kconst std::vector<double> & double_array_value\x1b[m\x1b[K);\n'}
[2.207136] (rovc_comm_mqtt) StderrLine: {'line': b'      |                           \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.207188] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:115:12:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::ParameterValue::ParameterValue(const std::vector<float>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.207239] (rovc_comm_mqtt) StderrLine: {'line': b'  115 |   explicit \x1b[01;36m\x1b[KParameterValue\x1b[m\x1b[K(const std::vector<float> & double_array_value);\n'}
[2.207285] (rovc_comm_mqtt) StderrLine: {'line': b'      |            \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.207329] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:115:54:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::vector<float>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.207376] (rovc_comm_mqtt) StderrLine: {'line': b'  115 |   explicit ParameterValue(\x1b[01;36m\x1b[Kconst std::vector<float> & double_array_value\x1b[m\x1b[K);\n'}
[2.207421] (rovc_comm_mqtt) StderrLine: {'line': b'      |                           \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.207466] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:112:12:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::ParameterValue::ParameterValue(const std::vector<long int, std::allocator<long int> >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.207512] (rovc_comm_mqtt) StderrLine: {'line': b'  112 |   explicit \x1b[01;36m\x1b[KParameterValue\x1b[m\x1b[K(const std::vector<int64_t> & int_array_value);\n'}
[2.207557] (rovc_comm_mqtt) StderrLine: {'line': b'      |            \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.207601] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:112:56:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::vector<long int, std::allocator<long int> >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.207648] (rovc_comm_mqtt) StderrLine: {'line': b'  112 |   explicit ParameterValue(\x1b[01;36m\x1b[Kconst std::vector<int64_t> & int_array_value\x1b[m\x1b[K);\n'}
[2.207693] (rovc_comm_mqtt) StderrLine: {'line': b'      |                           \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.207737] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:109:12:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::ParameterValue::ParameterValue(const std::vector<int>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.207783] (rovc_comm_mqtt) StderrLine: {'line': b'  109 |   explicit \x1b[01;36m\x1b[KParameterValue\x1b[m\x1b[K(const std::vector<int> & int_array_value);\n'}
[2.207827] (rovc_comm_mqtt) StderrLine: {'line': b'      |            \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.207871] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:109:52:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::vector<int>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.207921] (rovc_comm_mqtt) StderrLine: {'line': b'  109 |   explicit ParameterValue(\x1b[01;36m\x1b[Kconst std::vector<int> & int_array_value\x1b[m\x1b[K);\n'}
[2.207966] (rovc_comm_mqtt) StderrLine: {'line': b'      |                           \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.208010] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:106:12:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::ParameterValue::ParameterValue(const std::vector<bool, std::allocator<bool> >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.208056] (rovc_comm_mqtt) StderrLine: {'line': b'  106 |   explicit \x1b[01;36m\x1b[KParameterValue\x1b[m\x1b[K(const std::vector<bool> & bool_array_value);\n'}
[2.208100] (rovc_comm_mqtt) StderrLine: {'line': b'      |            \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.208152] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:106:53:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::vector<bool, std::allocator<bool> >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.208205] (rovc_comm_mqtt) StderrLine: {'line': b'  106 |   explicit ParameterValue(\x1b[01;36m\x1b[Kconst std::vector<bool> & bool_array_value\x1b[m\x1b[K);\n'}
[2.208251] (rovc_comm_mqtt) StderrLine: {'line': b'      |                           \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.208295] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:103:12:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::ParameterValue::ParameterValue(const std::vector<unsigned char, std::allocator<unsigned char> >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.208341] (rovc_comm_mqtt) StderrLine: {'line': b'  103 |   explicit \x1b[01;36m\x1b[KParameterValue\x1b[m\x1b[K(const std::vector<uint8_t> & byte_array_value);\n'}
[2.208386] (rovc_comm_mqtt) StderrLine: {'line': b'      |            \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.208430] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:103:56:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::vector<unsigned char, std::allocator<unsigned char> >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.208481] (rovc_comm_mqtt) StderrLine: {'line': b'  103 |   explicit ParameterValue(\x1b[01;36m\x1b[Kconst std::vector<uint8_t> & byte_array_value\x1b[m\x1b[K);\n'}
[2.208529] (rovc_comm_mqtt) StderrLine: {'line': b'      |                           \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.208574] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:100:12:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::ParameterValue::ParameterValue(const char*)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.208620] (rovc_comm_mqtt) StderrLine: {'line': b'  100 |   explicit \x1b[01;36m\x1b[KParameterValue\x1b[m\x1b[K(const char * string_value);\n'}
[2.208665] (rovc_comm_mqtt) StderrLine: {'line': b'      |            \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.208709] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:100:40:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst char*\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.208759] (rovc_comm_mqtt) StderrLine: {'line': b'  100 |   explicit ParameterValue(\x1b[01;36m\x1b[Kconst char * string_value\x1b[m\x1b[K);\n'}
[2.208804] (rovc_comm_mqtt) StderrLine: {'line': b'      |                           \x1b[01;36m\x1b[K~~~~~~~~~~~~~^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.208848] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:97:12:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::ParameterValue::ParameterValue(const string&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.208894] (rovc_comm_mqtt) StderrLine: {'line': b'   97 |   explicit \x1b[01;36m\x1b[KParameterValue\x1b[m\x1b[K(const std::string & string_value);\n'}
[2.208938] (rovc_comm_mqtt) StderrLine: {'line': b'      |            \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.208983] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:97:47:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst string&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kconst std::__cxx11::basic_string<char>&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[2.209031] (rovc_comm_mqtt) StderrLine: {'line': b'   97 |   explicit ParameterValue(\x1b[01;36m\x1b[Kconst std::string & string_value\x1b[m\x1b[K);\n'}
[2.209076] (rovc_comm_mqtt) StderrLine: {'line': b'      |                           \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.209121] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:94:12:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::ParameterValue::ParameterValue(double)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.209177] (rovc_comm_mqtt) StderrLine: {'line': b'   94 |   explicit \x1b[01;36m\x1b[KParameterValue\x1b[m\x1b[K(const double double_value);\n'}
[2.209223] (rovc_comm_mqtt) StderrLine: {'line': b'      |            \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.209268] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:94:40:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.209316] (rovc_comm_mqtt) StderrLine: {'line': b'   94 |   explicit ParameterValue(\x1b[01;36m\x1b[Kconst double double_value\x1b[m\x1b[K);\n'}
[2.209361] (rovc_comm_mqtt) StderrLine: {'line': b'      |                           \x1b[01;36m\x1b[K~~~~~~~~~~~~~^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.209406] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:91:12:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::ParameterValue::ParameterValue(float)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.209456] (rovc_comm_mqtt) StderrLine: {'line': b'   91 |   explicit \x1b[01;36m\x1b[KParameterValue\x1b[m\x1b[K(const float double_value);\n'}
[2.209502] (rovc_comm_mqtt) StderrLine: {'line': b'      |            \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.209546] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:91:39:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kfloat\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.209596] (rovc_comm_mqtt) StderrLine: {'line': b'   91 |   explicit ParameterValue(\x1b[01;36m\x1b[Kconst float double_value\x1b[m\x1b[K);\n'}
[2.209641] (rovc_comm_mqtt) StderrLine: {'line': b'      |                           \x1b[01;36m\x1b[K~~~~~~~~~~~~^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.209686] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:88:12:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::ParameterValue::ParameterValue(int64_t)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.209732] (rovc_comm_mqtt) StderrLine: {'line': b'   88 |   explicit \x1b[01;36m\x1b[KParameterValue\x1b[m\x1b[K(const int64_t int_value);\n'}
[2.209777] (rovc_comm_mqtt) StderrLine: {'line': b'      |            \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.209823] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:88:41:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kint64_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong int\x1b[m\x1b[K\xe2\x80\x99}\n'}
[2.209872] (rovc_comm_mqtt) StderrLine: {'line': b'   88 |   explicit ParameterValue(\x1b[01;36m\x1b[Kconst int64_t int_value\x1b[m\x1b[K);\n'}
[2.209921] (rovc_comm_mqtt) StderrLine: {'line': b'      |                           \x1b[01;36m\x1b[K~~~~~~~~~~~~~~^~~~~~~~~\x1b[m\x1b[K\n'}
[2.209967] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:85:12:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::ParameterValue::ParameterValue(int)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.210018] (rovc_comm_mqtt) StderrLine: {'line': b'   85 |   explicit \x1b[01;36m\x1b[KParameterValue\x1b[m\x1b[K(const int int_value);\n'}
[2.210063] (rovc_comm_mqtt) StderrLine: {'line': b'      |            \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.210107] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:85:37:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.210163] (rovc_comm_mqtt) StderrLine: {'line': b'   85 |   explicit ParameterValue(\x1b[01;36m\x1b[Kconst int int_value\x1b[m\x1b[K);\n'}
[2.210210] (rovc_comm_mqtt) StderrLine: {'line': b'      |                           \x1b[01;36m\x1b[K~~~~~~~~~~^~~~~~~~~\x1b[m\x1b[K\n'}
[2.210256] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:82:12:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::ParameterValue::ParameterValue(bool)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.210301] (rovc_comm_mqtt) StderrLine: {'line': b'   82 |   explicit \x1b[01;36m\x1b[KParameterValue\x1b[m\x1b[K(const bool bool_value);\n'}
[2.210346] (rovc_comm_mqtt) StderrLine: {'line': b'      |            \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.210391] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:82:38:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kbool\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.210438] (rovc_comm_mqtt) StderrLine: {'line': b'   82 |   explicit ParameterValue(\x1b[01;36m\x1b[Kconst bool bool_value\x1b[m\x1b[K);\n'}
[2.210486] (rovc_comm_mqtt) StderrLine: {'line': b'      |                           \x1b[01;36m\x1b[K~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.210531] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:79:12:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::ParameterValue::ParameterValue(const ParameterValue&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.210577] (rovc_comm_mqtt) StderrLine: {'line': b'   79 |   explicit \x1b[01;36m\x1b[KParameterValue\x1b[m\x1b[K(const rcl_interfaces::msg::ParameterValue & value);\n'}
[2.210622] (rovc_comm_mqtt) StderrLine: {'line': b'      |            \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.210666] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:79:71:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst ParameterValue&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kconst rcl_interfaces::msg::ParameterValue_<std::allocator<void> >&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[2.210714] (rovc_comm_mqtt) StderrLine: {'line': b'   79 |   explicit ParameterValue(\x1b[01;36m\x1b[Kconst rcl_interfaces::msg::ParameterValue & value\x1b[m\x1b[K);\n'}
[2.210758] (rovc_comm_mqtt) StderrLine: {'line': b'      |                           \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~\x1b[m\x1b[K\n'}
[2.210803] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:76:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::ParameterValue::ParameterValue()\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.210851] (rovc_comm_mqtt) StderrLine: {'line': b'   76 |   \x1b[01;36m\x1b[KParameterValue\x1b[m\x1b[K();\n'}
[2.210897] (rovc_comm_mqtt) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.210943] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:76:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 0 arguments, 1 provided\n'}
[2.210987] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:71:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::ParameterValue::ParameterValue(const rclcpp::ParameterValue&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.211033] (rovc_comm_mqtt) StderrLine: {'line': b'   71 | class \x1b[01;36m\x1b[KParameterValue\x1b[m\x1b[K\n'}
[2.211077] (rovc_comm_mqtt) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.211121] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:71:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst rclcpp::ParameterValue&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.211178] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:71:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::ParameterValue::ParameterValue(rclcpp::ParameterValue&&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.211224] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:71:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Krclcpp::ParameterValue&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.304916] (-) TimerEvent: {}
[2.405178] (-) TimerEvent: {}
[2.505428] (-) TimerEvent: {}
[2.577946] (rovc_comm_mqtt) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_interfaces/node_parameters_interface.hpp:28\x1b[m\x1b[K,\n'}
[2.578612] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:54\x1b[m\x1b[K,\n'}
[2.578742] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[2.578838] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[2.578907] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.578958] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:1\x1b[m\x1b[K:\n'}
[2.579010] (rovc_comm_mqtt) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kauto rclcpp::detail::get_value_helper(const rclcpp::Parameter*) [with T = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.579063] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:274:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kdecltype(auto) rclcpp::Parameter::get_value() const [with T = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.579116] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:294:80:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kbool rclcpp::Node::get_parameter(const string&, ParameterT&) const [with ParameterT = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.579267] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:45:24:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid MqttBridgeNode::declare_and_subscribe(const string&, std::vector<std::shared_ptr<rclcpp::SubscriptionBase> >&) [with MsgType = std_msgs::msg::Float64_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.579406] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:26:50:\x1b[m\x1b[K   required from here\n'}
[2.579488] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:239:49:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Krclcpp::ParameterValue::get<std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >() const\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.579680] (rovc_comm_mqtt) StderrLine: {'line': b'  239 |   return \x1b[01;31m\x1b[Kparameter->get_parameter_value().get<T>()\x1b[m\x1b[K;\n'}
[2.579733] (rovc_comm_mqtt) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~\x1b[m\x1b[K\n'}
[2.579784] (rovc_comm_mqtt) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:26\x1b[m\x1b[K,\n'}
[2.579835] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_interfaces/node_parameters_interface.hpp:28\x1b[m\x1b[K,\n'}
[2.579950] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:54\x1b[m\x1b[K,\n'}
[2.580002] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[2.580053] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[2.580103] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.580254] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:1\x1b[m\x1b[K:\n'}
[2.580409] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:148:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<rclcpp::ParameterType type> constexpr typename std::enable_if<(type == rclcpp::PARAMETER_BOOL), const bool&>::type rclcpp::ParameterValue::get() const\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.580463] (rovc_comm_mqtt) StderrLine: {'line': b'  148 |   \x1b[01;36m\x1b[Kget\x1b[m\x1b[K() const\n'}
[2.580513] (rovc_comm_mqtt) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.580562] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:148:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.580613] (rovc_comm_mqtt) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_interfaces/node_parameters_interface.hpp:28\x1b[m\x1b[K,\n'}
[2.580663] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:54\x1b[m\x1b[K,\n'}
[2.580712] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[2.580832] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[2.580885] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.580978] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:1\x1b[m\x1b[K:\n'}
[2.581025] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:239:49:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<rclcpp::ParameterType type> constexpr typename std::enable_if<(type == rclcpp::PARAMETER_BOOL), const bool&>::type rclcpp::ParameterValue::get() const\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.581089] (rovc_comm_mqtt) StderrLine: {'line': b'  239 |   return \x1b[01;31m\x1b[Kparameter->get_parameter_value().get<T>()\x1b[m\x1b[K;\n'}
[2.581158] (rovc_comm_mqtt) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~\x1b[m\x1b[K\n'}
[2.581224] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:239:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Krclcpp::ParameterType\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Kstd::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.581272] (rovc_comm_mqtt) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:26\x1b[m\x1b[K,\n'}
[2.581317] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_interfaces/node_parameters_interface.hpp:28\x1b[m\x1b[K,\n'}
[2.581366] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:54\x1b[m\x1b[K,\n'}
[2.581410] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[2.581454] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[2.581499] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.581543] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:1\x1b[m\x1b[K:\n'}
[2.581587] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:159:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<rclcpp::ParameterType type> constexpr typename std::enable_if<(type == rclcpp::PARAMETER_INTEGER), const long int&>::type rclcpp::ParameterValue::get() const\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.581635] (rovc_comm_mqtt) StderrLine: {'line': b'  159 |   \x1b[01;36m\x1b[Kget\x1b[m\x1b[K() const\n'}
[2.581682] (rovc_comm_mqtt) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.581727] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:159:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.581773] (rovc_comm_mqtt) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_interfaces/node_parameters_interface.hpp:28\x1b[m\x1b[K,\n'}
[2.581835] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:54\x1b[m\x1b[K,\n'}
[2.581894] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[2.581938] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[2.581983] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.582027] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:1\x1b[m\x1b[K:\n'}
[2.582071] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:239:49:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<rclcpp::ParameterType type> constexpr typename std::enable_if<(type == rclcpp::PARAMETER_INTEGER), const long int&>::type rclcpp::ParameterValue::get() const\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.582119] (rovc_comm_mqtt) StderrLine: {'line': b'  239 |   return \x1b[01;31m\x1b[Kparameter->get_parameter_value().get<T>()\x1b[m\x1b[K;\n'}
[2.582203] (rovc_comm_mqtt) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~\x1b[m\x1b[K\n'}
[2.582250] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:239:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Krclcpp::ParameterType\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Kstd::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.582297] (rovc_comm_mqtt) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:26\x1b[m\x1b[K,\n'}
[2.582346] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_interfaces/node_parameters_interface.hpp:28\x1b[m\x1b[K,\n'}
[2.582391] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:54\x1b[m\x1b[K,\n'}
[2.582436] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[2.582509] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[2.582567] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.582611] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:1\x1b[m\x1b[K:\n'}
[2.582658] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:170:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<rclcpp::ParameterType type> constexpr typename std::enable_if<(type == rclcpp::PARAMETER_DOUBLE), const double&>::type rclcpp::ParameterValue::get() const\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.582710] (rovc_comm_mqtt) StderrLine: {'line': b'  170 |   \x1b[01;36m\x1b[Kget\x1b[m\x1b[K() const\n'}
[2.582756] (rovc_comm_mqtt) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.582801] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:170:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.582847] (rovc_comm_mqtt) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_interfaces/node_parameters_interface.hpp:28\x1b[m\x1b[K,\n'}
[2.582893] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:54\x1b[m\x1b[K,\n'}
[2.582937] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[2.582998] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[2.583044] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.583089] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:1\x1b[m\x1b[K:\n'}
[2.583139] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:239:49:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<rclcpp::ParameterType type> constexpr typename std::enable_if<(type == rclcpp::PARAMETER_DOUBLE), const double&>::type rclcpp::ParameterValue::get() const\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.583215] (rovc_comm_mqtt) StderrLine: {'line': b'  239 |   return \x1b[01;31m\x1b[Kparameter->get_parameter_value().get<T>()\x1b[m\x1b[K;\n'}
[2.583263] (rovc_comm_mqtt) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~\x1b[m\x1b[K\n'}
[2.583308] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:239:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Krclcpp::ParameterType\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Kstd::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.583355] (rovc_comm_mqtt) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:26\x1b[m\x1b[K,\n'}
[2.583404] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_interfaces/node_parameters_interface.hpp:28\x1b[m\x1b[K,\n'}
[2.583449] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:54\x1b[m\x1b[K,\n'}
[2.583493] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[2.583538] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[2.583582] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.583626] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:1\x1b[m\x1b[K:\n'}
[2.583672] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:181:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<rclcpp::ParameterType type> constexpr typename std::enable_if<(type == rclcpp::PARAMETER_STRING), const std::__cxx11::basic_string<char>&>::type rclcpp::ParameterValue::get() const\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.583719] (rovc_comm_mqtt) StderrLine: {'line': b'  181 |   \x1b[01;36m\x1b[Kget\x1b[m\x1b[K() const\n'}
[2.583763] (rovc_comm_mqtt) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.583807] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:181:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.583852] (rovc_comm_mqtt) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_interfaces/node_parameters_interface.hpp:28\x1b[m\x1b[K,\n'}
[2.583896] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:54\x1b[m\x1b[K,\n'}
[2.583941] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[2.583985] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[2.584029] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.584073] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:1\x1b[m\x1b[K:\n'}
[2.584117] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:239:49:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<rclcpp::ParameterType type> constexpr typename std::enable_if<(type == rclcpp::PARAMETER_STRING), const std::__cxx11::basic_string<char>&>::type rclcpp::ParameterValue::get() const\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.584228] (rovc_comm_mqtt) StderrLine: {'line': b'  239 |   return \x1b[01;31m\x1b[Kparameter->get_parameter_value().get<T>()\x1b[m\x1b[K;\n'}
[2.584275] (rovc_comm_mqtt) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~\x1b[m\x1b[K\n'}
[2.584320] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:239:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Krclcpp::ParameterType\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Kstd::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.584371] (rovc_comm_mqtt) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:26\x1b[m\x1b[K,\n'}
[2.584415] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_interfaces/node_parameters_interface.hpp:28\x1b[m\x1b[K,\n'}
[2.584462] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:54\x1b[m\x1b[K,\n'}
[2.584506] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[2.584551] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[2.584596] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.584640] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:1\x1b[m\x1b[K:\n'}
[2.584685] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:193:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<rclcpp::ParameterType type> constexpr typename std::enable_if<(type == rclcpp::PARAMETER_BYTE_ARRAY), const std::vector<unsigned char, std::allocator<unsigned char> >&>::type rclcpp::ParameterValue::get() const\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.584735] (rovc_comm_mqtt) StderrLine: {'line': b'  193 |   \x1b[01;36m\x1b[Kget\x1b[m\x1b[K() const\n'}
[2.584780] (rovc_comm_mqtt) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.584824] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:193:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.584870] (rovc_comm_mqtt) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_interfaces/node_parameters_interface.hpp:28\x1b[m\x1b[K,\n'}
[2.584915] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:54\x1b[m\x1b[K,\n'}
[2.584960] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[2.585005] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[2.585049] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.585094] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:1\x1b[m\x1b[K:\n'}
[2.585167] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:239:49:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<rclcpp::ParameterType type> constexpr typename std::enable_if<(type == rclcpp::PARAMETER_BYTE_ARRAY), const std::vector<unsigned char, std::allocator<unsigned char> >&>::type rclcpp::ParameterValue::get() const\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.585239] (rovc_comm_mqtt) StderrLine: {'line': b'  239 |   return \x1b[01;31m\x1b[Kparameter->get_parameter_value().get<T>()\x1b[m\x1b[K;\n'}
[2.585285] (rovc_comm_mqtt) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~\x1b[m\x1b[K\n'}
[2.585329] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:239:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Krclcpp::ParameterType\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Kstd::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.585380] (rovc_comm_mqtt) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:26\x1b[m\x1b[K,\n'}
[2.585425] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_interfaces/node_parameters_interface.hpp:28\x1b[m\x1b[K,\n'}
[2.585469] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:54\x1b[m\x1b[K,\n'}
[2.585514] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[2.585558] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[2.585603] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.585648] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:1\x1b[m\x1b[K:\n'}
[2.585696] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:205:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<rclcpp::ParameterType type> constexpr typename std::enable_if<(type == rclcpp::PARAMETER_BOOL_ARRAY), const std::vector<bool, std::allocator<bool> >&>::type rclcpp::ParameterValue::get() const\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.585746] (rovc_comm_mqtt) StderrLine: {'line': b'  205 |   \x1b[01;36m\x1b[Kget\x1b[m\x1b[K() const\n'}
[2.585791] (rovc_comm_mqtt) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.585836] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:205:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.585880] (rovc_comm_mqtt) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_interfaces/node_parameters_interface.hpp:28\x1b[m\x1b[K,\n'}
[2.585925] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:54\x1b[m\x1b[K,\n'}
[2.585969] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[2.586013] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[2.586058] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.586101] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:1\x1b[m\x1b[K:\n'}
[2.586175] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:239:49:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<rclcpp::ParameterType type> constexpr typename std::enable_if<(type == rclcpp::PARAMETER_BOOL_ARRAY), const std::vector<bool, std::allocator<bool> >&>::type rclcpp::ParameterValue::get() const\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.586243] (rovc_comm_mqtt) StderrLine: {'line': b'  239 |   return \x1b[01;31m\x1b[Kparameter->get_parameter_value().get<T>()\x1b[m\x1b[K;\n'}
[2.586288] (rovc_comm_mqtt) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~\x1b[m\x1b[K\n'}
[2.586335] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:239:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Krclcpp::ParameterType\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Kstd::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.586382] (rovc_comm_mqtt) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:26\x1b[m\x1b[K,\n'}
[2.586426] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_interfaces/node_parameters_interface.hpp:28\x1b[m\x1b[K,\n'}
[2.586471] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:54\x1b[m\x1b[K,\n'}
[2.586515] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[2.586558] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[2.586603] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.586647] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:1\x1b[m\x1b[K:\n'}
[2.586691] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:217:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<rclcpp::ParameterType type> constexpr typename std::enable_if<(type == rclcpp::PARAMETER_INTEGER_ARRAY), const std::vector<long int, std::allocator<long int> >&>::type rclcpp::ParameterValue::get() const\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.586738] (rovc_comm_mqtt) StderrLine: {'line': b'  217 |   \x1b[01;36m\x1b[Kget\x1b[m\x1b[K() const\n'}
[2.586782] (rovc_comm_mqtt) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.586826] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:217:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.586871] (rovc_comm_mqtt) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_interfaces/node_parameters_interface.hpp:28\x1b[m\x1b[K,\n'}
[2.586915] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:54\x1b[m\x1b[K,\n'}
[2.586960] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[2.587004] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[2.587049] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.587093] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:1\x1b[m\x1b[K:\n'}
[2.587167] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:239:49:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<rclcpp::ParameterType type> constexpr typename std::enable_if<(type == rclcpp::PARAMETER_INTEGER_ARRAY), const std::vector<long int, std::allocator<long int> >&>::type rclcpp::ParameterValue::get() const\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.587243] (rovc_comm_mqtt) StderrLine: {'line': b'  239 |   return \x1b[01;31m\x1b[Kparameter->get_parameter_value().get<T>()\x1b[m\x1b[K;\n'}
[2.587291] (rovc_comm_mqtt) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~\x1b[m\x1b[K\n'}
[2.587336] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:239:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Krclcpp::ParameterType\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Kstd::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.587382] (rovc_comm_mqtt) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:26\x1b[m\x1b[K,\n'}
[2.587426] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_interfaces/node_parameters_interface.hpp:28\x1b[m\x1b[K,\n'}
[2.587470] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:54\x1b[m\x1b[K,\n'}
[2.587515] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[2.587564] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[2.587609] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.587653] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:1\x1b[m\x1b[K:\n'}
[2.587697] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:229:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<rclcpp::ParameterType type> constexpr typename std::enable_if<(type == rclcpp::PARAMETER_DOUBLE_ARRAY), const std::vector<double, std::allocator<double> >&>::type rclcpp::ParameterValue::get() const\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.587743] (rovc_comm_mqtt) StderrLine: {'line': b'  229 |   \x1b[01;36m\x1b[Kget\x1b[m\x1b[K() const\n'}
[2.587787] (rovc_comm_mqtt) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.587831] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:229:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.587876] (rovc_comm_mqtt) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_interfaces/node_parameters_interface.hpp:28\x1b[m\x1b[K,\n'}
[2.587921] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:54\x1b[m\x1b[K,\n'}
[2.587965] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[2.588009] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[2.588054] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.588098] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:1\x1b[m\x1b[K:\n'}
[2.588171] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:239:49:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<rclcpp::ParameterType type> constexpr typename std::enable_if<(type == rclcpp::PARAMETER_DOUBLE_ARRAY), const std::vector<double, std::allocator<double> >&>::type rclcpp::ParameterValue::get() const\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.588246] (rovc_comm_mqtt) StderrLine: {'line': b'  239 |   return \x1b[01;31m\x1b[Kparameter->get_parameter_value().get<T>()\x1b[m\x1b[K;\n'}
[2.588291] (rovc_comm_mqtt) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~\x1b[m\x1b[K\n'}
[2.588335] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:239:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Krclcpp::ParameterType\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Kstd::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.588381] (rovc_comm_mqtt) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:26\x1b[m\x1b[K,\n'}
[2.588425] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_interfaces/node_parameters_interface.hpp:28\x1b[m\x1b[K,\n'}
[2.588469] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:54\x1b[m\x1b[K,\n'}
[2.588512] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[2.588556] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[2.588599] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.588643] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:1\x1b[m\x1b[K:\n'}
[2.588687] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:241:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<rclcpp::ParameterType type> constexpr typename std::enable_if<(type == rclcpp::PARAMETER_STRING_ARRAY), const std::vector<std::__cxx11::basic_string<char> >&>::type rclcpp::ParameterValue::get() const\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.588739] (rovc_comm_mqtt) StderrLine: {'line': b'  241 |   \x1b[01;36m\x1b[Kget\x1b[m\x1b[K() const\n'}
[2.588783] (rovc_comm_mqtt) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.588827] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:241:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.588871] (rovc_comm_mqtt) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_interfaces/node_parameters_interface.hpp:28\x1b[m\x1b[K,\n'}
[2.588914] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:54\x1b[m\x1b[K,\n'}
[2.588961] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[2.589005] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[2.589068] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.589138] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:1\x1b[m\x1b[K:\n'}
[2.589187] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:239:49:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<rclcpp::ParameterType type> constexpr typename std::enable_if<(type == rclcpp::PARAMETER_STRING_ARRAY), const std::vector<std::__cxx11::basic_string<char> >&>::type rclcpp::ParameterValue::get() const\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.589241] (rovc_comm_mqtt) StderrLine: {'line': b'  239 |   return \x1b[01;31m\x1b[Kparameter->get_parameter_value().get<T>()\x1b[m\x1b[K;\n'}
[2.589286] (rovc_comm_mqtt) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~\x1b[m\x1b[K\n'}
[2.589330] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:239:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Krclcpp::ParameterType\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Kstd::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.589376] (rovc_comm_mqtt) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:26\x1b[m\x1b[K,\n'}
[2.589419] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_interfaces/node_parameters_interface.hpp:28\x1b[m\x1b[K,\n'}
[2.589464] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:54\x1b[m\x1b[K,\n'}
[2.589508] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[2.589551] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[2.589596] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.589640] (rovc_comm_mqtt) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:1\x1b[m\x1b[K:\n'}
[2.589683] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:254:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class type> constexpr typename std::enable_if<std::is_same<T, bool>::value, const bool&>::type rclcpp::ParameterValue::get() const\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.589729] (rovc_comm_mqtt) StderrLine: {'line': b'  254 |   \x1b[01;36m\x1b[Kget\x1b[m\x1b[K() const\n'}
[2.589773] (rovc_comm_mqtt) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.589817] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:254:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.589861] (rovc_comm_mqtt) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class type> constexpr typename std::enable_if<std::is_same<T, bool>::value, const bool&>::type rclcpp::ParameterValue::get() const [with type = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.589909] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:239:49:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kauto rclcpp::detail::get_value_helper(const rclcpp::Parameter*) [with T = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.589955] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:274:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kdecltype(auto) rclcpp::Parameter::get_value() const [with T = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.590003] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:294:80:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kbool rclcpp::Node::get_parameter(const string&, ParameterT&) const [with ParameterT = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.590056] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:45:24:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid MqttBridgeNode::declare_and_subscribe(const string&, std::vector<std::shared_ptr<rclcpp::SubscriptionBase> >&) [with MsgType = std_msgs::msg::Float64_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.590106] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:26:50:\x1b[m\x1b[K   required from here\n'}
[2.590160] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:254:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, const bool&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.590207] (rovc_comm_mqtt) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kauto rclcpp::detail::get_value_helper(const rclcpp::Parameter*) [with T = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.590253] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:274:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kdecltype(auto) rclcpp::Parameter::get_value() const [with T = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.590299] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:294:80:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kbool rclcpp::Node::get_parameter(const string&, ParameterT&) const [with ParameterT = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.590346] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:45:24:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid MqttBridgeNode::declare_and_subscribe(const string&, std::vector<std::shared_ptr<rclcpp::SubscriptionBase> >&) [with MsgType = std_msgs::msg::Float64_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.590396] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:26:50:\x1b[m\x1b[K   required from here\n'}
[2.590440] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:263:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class type> constexpr typename std::enable_if<(std::is_integral<_Tp>::value && (! std::is_same<T, bool>::value)), const long int&>::type rclcpp::ParameterValue::get() const\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.590486] (rovc_comm_mqtt) StderrLine: {'line': b'  263 |   \x1b[01;36m\x1b[Kget\x1b[m\x1b[K() const\n'}
[2.590530] (rovc_comm_mqtt) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.590573] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:263:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.590618] (rovc_comm_mqtt) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class type> constexpr typename std::enable_if<(std::is_integral<_Tp>::value && (! std::is_same<T, bool>::value)), const long int&>::type rclcpp::ParameterValue::get() const [with type = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.590668] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:239:49:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kauto rclcpp::detail::get_value_helper(const rclcpp::Parameter*) [with T = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.590713] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:274:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kdecltype(auto) rclcpp::Parameter::get_value() const [with T = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.590758] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:294:80:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kbool rclcpp::Node::get_parameter(const string&, ParameterT&) const [with ParameterT = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.590804] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:45:24:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid MqttBridgeNode::declare_and_subscribe(const string&, std::vector<std::shared_ptr<rclcpp::SubscriptionBase> >&) [with MsgType = std_msgs::msg::Float64_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.590857] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:26:50:\x1b[m\x1b[K   required from here\n'}
[2.590908] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:263:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, const long int&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.590957] (rovc_comm_mqtt) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kauto rclcpp::detail::get_value_helper(const rclcpp::Parameter*) [with T = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.591003] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:274:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kdecltype(auto) rclcpp::Parameter::get_value() const [with T = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.591048] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:294:80:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kbool rclcpp::Node::get_parameter(const string&, ParameterT&) const [with ParameterT = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.591094] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:45:24:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid MqttBridgeNode::declare_and_subscribe(const string&, std::vector<std::shared_ptr<rclcpp::SubscriptionBase> >&) [with MsgType = std_msgs::msg::Float64_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.591147] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:26:50:\x1b[m\x1b[K   required from here\n'}
[2.591198] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:271:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class type> constexpr typename std::enable_if<std::is_floating_point<_Tp>::value, const double&>::type rclcpp::ParameterValue::get() const\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.591245] (rovc_comm_mqtt) StderrLine: {'line': b'  271 |   \x1b[01;36m\x1b[Kget\x1b[m\x1b[K() const\n'}
[2.591289] (rovc_comm_mqtt) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.591332] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:271:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.591377] (rovc_comm_mqtt) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class type> constexpr typename std::enable_if<std::is_floating_point<_Tp>::value, const double&>::type rclcpp::ParameterValue::get() const [with type = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.591423] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:239:49:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kauto rclcpp::detail::get_value_helper(const rclcpp::Parameter*) [with T = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.591468] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:274:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kdecltype(auto) rclcpp::Parameter::get_value() const [with T = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.591513] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:294:80:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kbool rclcpp::Node::get_parameter(const string&, ParameterT&) const [with ParameterT = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.591559] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:45:24:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid MqttBridgeNode::declare_and_subscribe(const string&, std::vector<std::shared_ptr<rclcpp::SubscriptionBase> >&) [with MsgType = std_msgs::msg::Float64_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.591606] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:26:50:\x1b[m\x1b[K   required from here\n'}
[2.591651] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:271:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, const double&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.591696] (rovc_comm_mqtt) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kauto rclcpp::detail::get_value_helper(const rclcpp::Parameter*) [with T = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.591747] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:274:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kdecltype(auto) rclcpp::Parameter::get_value() const [with T = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.591798] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:294:80:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kbool rclcpp::Node::get_parameter(const string&, ParameterT&) const [with ParameterT = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.591848] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:45:24:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid MqttBridgeNode::declare_and_subscribe(const string&, std::vector<std::shared_ptr<rclcpp::SubscriptionBase> >&) [with MsgType = std_msgs::msg::Float64_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.591896] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:26:50:\x1b[m\x1b[K   required from here\n'}
[2.591941] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:279:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class type> constexpr typename std::enable_if<std::is_convertible<type, std::__cxx11::basic_string<char> >::value, const std::__cxx11::basic_string<char>&>::type rclcpp::ParameterValue::get() const\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.591989] (rovc_comm_mqtt) StderrLine: {'line': b'  279 |   \x1b[01;36m\x1b[Kget\x1b[m\x1b[K() const\n'}
[2.592033] (rovc_comm_mqtt) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.592078] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:279:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.592123] (rovc_comm_mqtt) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class type> constexpr typename std::enable_if<std::is_convertible<type, std::__cxx11::basic_string<char> >::value, const std::__cxx11::basic_string<char>&>::type rclcpp::ParameterValue::get() const [with type = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.592181] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:239:49:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kauto rclcpp::detail::get_value_helper(const rclcpp::Parameter*) [with T = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.592228] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:274:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kdecltype(auto) rclcpp::Parameter::get_value() const [with T = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.592274] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:294:80:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kbool rclcpp::Node::get_parameter(const string&, ParameterT&) const [with ParameterT = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.592321] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:45:24:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid MqttBridgeNode::declare_and_subscribe(const string&, std::vector<std::shared_ptr<rclcpp::SubscriptionBase> >&) [with MsgType = std_msgs::msg::Float64_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.592368] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:26:50:\x1b[m\x1b[K   required from here\n'}
[2.592413] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:279:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, const std::__cxx11::basic_string<char>&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.592462] (rovc_comm_mqtt) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kauto rclcpp::detail::get_value_helper(const rclcpp::Parameter*) [with T = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.592508] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:274:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kdecltype(auto) rclcpp::Parameter::get_value() const [with T = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.592558] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:294:80:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kbool rclcpp::Node::get_parameter(const string&, ParameterT&) const [with ParameterT = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.592609] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:45:24:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid MqttBridgeNode::declare_and_subscribe(const string&, std::vector<std::shared_ptr<rclcpp::SubscriptionBase> >&) [with MsgType = std_msgs::msg::Float64_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.592657] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:26:50:\x1b[m\x1b[K   required from here\n'}
[2.592701] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:289:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class type> constexpr typename std::enable_if<std::is_convertible<type, const std::vector<unsigned char, std::allocator<unsigned char> >&>::value, const std::vector<unsigned char, std::allocator<unsigned char> >&>::type rclcpp::ParameterValue::get() const\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.592753] (rovc_comm_mqtt) StderrLine: {'line': b'  289 |   \x1b[01;36m\x1b[Kget\x1b[m\x1b[K() const\n'}
[2.592797] (rovc_comm_mqtt) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.592841] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:289:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.592886] (rovc_comm_mqtt) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class type> constexpr typename std::enable_if<std::is_convertible<type, const std::vector<unsigned char, std::allocator<unsigned char> >&>::value, const std::vector<unsigned char, std::allocator<unsigned char> >&>::type rclcpp::ParameterValue::get() const [with type = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.592933] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:239:49:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kauto rclcpp::detail::get_value_helper(const rclcpp::Parameter*) [with T = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.592979] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:274:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kdecltype(auto) rclcpp::Parameter::get_value() const [with T = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.593028] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:294:80:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kbool rclcpp::Node::get_parameter(const string&, ParameterT&) const [with ParameterT = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.593074] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:45:24:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid MqttBridgeNode::declare_and_subscribe(const string&, std::vector<std::shared_ptr<rclcpp::SubscriptionBase> >&) [with MsgType = std_msgs::msg::Float64_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.593120] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:26:50:\x1b[m\x1b[K   required from here\n'}
[2.593174] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:289:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, const std::vector<unsigned char, std::allocator<unsigned char> >&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.593222] (rovc_comm_mqtt) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kauto rclcpp::detail::get_value_helper(const rclcpp::Parameter*) [with T = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.593268] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:274:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kdecltype(auto) rclcpp::Parameter::get_value() const [with T = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.593314] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:294:80:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kbool rclcpp::Node::get_parameter(const string&, ParameterT&) const [with ParameterT = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.593373] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:45:24:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid MqttBridgeNode::declare_and_subscribe(const string&, std::vector<std::shared_ptr<rclcpp::SubscriptionBase> >&) [with MsgType = std_msgs::msg::Float64_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.593421] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:26:50:\x1b[m\x1b[K   required from here\n'}
[2.593465] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:299:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class type> constexpr typename std::enable_if<std::is_convertible<type, const std::vector<bool, std::allocator<bool> >&>::value, const std::vector<bool, std::allocator<bool> >&>::type rclcpp::ParameterValue::get() const\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.593512] (rovc_comm_mqtt) StderrLine: {'line': b'  299 |   \x1b[01;36m\x1b[Kget\x1b[m\x1b[K() const\n'}
[2.593557] (rovc_comm_mqtt) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.593602] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:299:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.593650] (rovc_comm_mqtt) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class type> constexpr typename std::enable_if<std::is_convertible<type, const std::vector<bool, std::allocator<bool> >&>::value, const std::vector<bool, std::allocator<bool> >&>::type rclcpp::ParameterValue::get() const [with type = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.593701] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:239:49:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kauto rclcpp::detail::get_value_helper(const rclcpp::Parameter*) [with T = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.593747] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:274:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kdecltype(auto) rclcpp::Parameter::get_value() const [with T = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.593793] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:294:80:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kbool rclcpp::Node::get_parameter(const string&, ParameterT&) const [with ParameterT = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.593840] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:45:24:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid MqttBridgeNode::declare_and_subscribe(const string&, std::vector<std::shared_ptr<rclcpp::SubscriptionBase> >&) [with MsgType = std_msgs::msg::Float64_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.593887] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:26:50:\x1b[m\x1b[K   required from here\n'}
[2.593936] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:299:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, const std::vector<bool, std::allocator<bool> >&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.593983] (rovc_comm_mqtt) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kauto rclcpp::detail::get_value_helper(const rclcpp::Parameter*) [with T = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.594029] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:274:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kdecltype(auto) rclcpp::Parameter::get_value() const [with T = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.594074] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:294:80:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kbool rclcpp::Node::get_parameter(const string&, ParameterT&) const [with ParameterT = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.594123] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:45:24:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid MqttBridgeNode::declare_and_subscribe(const string&, std::vector<std::shared_ptr<rclcpp::SubscriptionBase> >&) [with MsgType = std_msgs::msg::Float64_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.594190] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:26:50:\x1b[m\x1b[K   required from here\n'}
[2.594236] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:309:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class type> constexpr typename std::enable_if<std::is_convertible<type, const std::vector<int>&>::value, const std::vector<long int, std::allocator<long int> >&>::type rclcpp::ParameterValue::get() const\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.594283] (rovc_comm_mqtt) StderrLine: {'line': b'  309 |   \x1b[01;36m\x1b[Kget\x1b[m\x1b[K() const\n'}
[2.594327] (rovc_comm_mqtt) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.594370] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:309:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.594415] (rovc_comm_mqtt) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class type> constexpr typename std::enable_if<std::is_convertible<type, const std::vector<int>&>::value, const std::vector<long int, std::allocator<long int> >&>::type rclcpp::ParameterValue::get() const [with type = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.594462] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:239:49:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kauto rclcpp::detail::get_value_helper(const rclcpp::Parameter*) [with T = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.594508] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:274:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kdecltype(auto) rclcpp::Parameter::get_value() const [with T = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.594553] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:294:80:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kbool rclcpp::Node::get_parameter(const string&, ParameterT&) const [with ParameterT = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.594599] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:45:24:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid MqttBridgeNode::declare_and_subscribe(const string&, std::vector<std::shared_ptr<rclcpp::SubscriptionBase> >&) [with MsgType = std_msgs::msg::Float64_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.594648] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:26:50:\x1b[m\x1b[K   required from here\n'}
[2.594692] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:309:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, const std::vector<long int, std::allocator<long int> >&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.594739] (rovc_comm_mqtt) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kauto rclcpp::detail::get_value_helper(const rclcpp::Parameter*) [with T = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.594787] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:274:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kdecltype(auto) rclcpp::Parameter::get_value() const [with T = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.594833] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:294:80:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kbool rclcpp::Node::get_parameter(const string&, ParameterT&) const [with ParameterT = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.594882] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:45:24:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid MqttBridgeNode::declare_and_subscribe(const string&, std::vector<std::shared_ptr<rclcpp::SubscriptionBase> >&) [with MsgType = std_msgs::msg::Float64_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.594929] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:26:50:\x1b[m\x1b[K   required from here\n'}
[2.594977] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:319:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class type> constexpr typename std::enable_if<std::is_convertible<type, const std::vector<long int, std::allocator<long int> >&>::value, const std::vector<long int, std::allocator<long int> >&>::type rclcpp::ParameterValue::get() const\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.595030] (rovc_comm_mqtt) StderrLine: {'line': b'  319 |   \x1b[01;36m\x1b[Kget\x1b[m\x1b[K() const\n'}
[2.595075] (rovc_comm_mqtt) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.595119] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:319:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.595172] (rovc_comm_mqtt) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class type> constexpr typename std::enable_if<std::is_convertible<type, const std::vector<long int, std::allocator<long int> >&>::value, const std::vector<long int, std::allocator<long int> >&>::type rclcpp::ParameterValue::get() const [with type = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.595221] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:239:49:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kauto rclcpp::detail::get_value_helper(const rclcpp::Parameter*) [with T = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.595267] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:274:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kdecltype(auto) rclcpp::Parameter::get_value() const [with T = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.595313] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:294:80:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kbool rclcpp::Node::get_parameter(const string&, ParameterT&) const [with ParameterT = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.595359] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:45:24:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid MqttBridgeNode::declare_and_subscribe(const string&, std::vector<std::shared_ptr<rclcpp::SubscriptionBase> >&) [with MsgType = std_msgs::msg::Float64_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.595411] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:26:50:\x1b[m\x1b[K   required from here\n'}
[2.595456] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:319:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, const std::vector<long int, std::allocator<long int> >&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.595502] (rovc_comm_mqtt) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kauto rclcpp::detail::get_value_helper(const rclcpp::Parameter*) [with T = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.595547] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:274:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kdecltype(auto) rclcpp::Parameter::get_value() const [with T = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.595593] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:294:80:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kbool rclcpp::Node::get_parameter(const string&, ParameterT&) const [with ParameterT = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.595643] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:45:24:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid MqttBridgeNode::declare_and_subscribe(const string&, std::vector<std::shared_ptr<rclcpp::SubscriptionBase> >&) [with MsgType = std_msgs::msg::Float64_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.595693] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:26:50:\x1b[m\x1b[K   required from here\n'}
[2.595739] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:329:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class type> constexpr typename std::enable_if<std::is_convertible<type, const std::vector<float>&>::value, const std::vector<double, std::allocator<double> >&>::type rclcpp::ParameterValue::get() const\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.595788] (rovc_comm_mqtt) StderrLine: {'line': b'  329 |   \x1b[01;36m\x1b[Kget\x1b[m\x1b[K() const\n'}
[2.595836] (rovc_comm_mqtt) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.595883] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:329:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.595928] (rovc_comm_mqtt) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class type> constexpr typename std::enable_if<std::is_convertible<type, const std::vector<float>&>::value, const std::vector<double, std::allocator<double> >&>::type rclcpp::ParameterValue::get() const [with type = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.595975] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:239:49:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kauto rclcpp::detail::get_value_helper(const rclcpp::Parameter*) [with T = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.596025] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:274:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kdecltype(auto) rclcpp::Parameter::get_value() const [with T = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.596070] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:294:80:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kbool rclcpp::Node::get_parameter(const string&, ParameterT&) const [with ParameterT = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.596116] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:45:24:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid MqttBridgeNode::declare_and_subscribe(const string&, std::vector<std::shared_ptr<rclcpp::SubscriptionBase> >&) [with MsgType = std_msgs::msg::Float64_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.596171] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:26:50:\x1b[m\x1b[K   required from here\n'}
[2.596217] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:329:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, const std::vector<double, std::allocator<double> >&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.596263] (rovc_comm_mqtt) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kauto rclcpp::detail::get_value_helper(const rclcpp::Parameter*) [with T = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.596307] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:274:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kdecltype(auto) rclcpp::Parameter::get_value() const [with T = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.596351] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:294:80:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kbool rclcpp::Node::get_parameter(const string&, ParameterT&) const [with ParameterT = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.596396] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:45:24:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid MqttBridgeNode::declare_and_subscribe(const string&, std::vector<std::shared_ptr<rclcpp::SubscriptionBase> >&) [with MsgType = std_msgs::msg::Float64_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.596445] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:26:50:\x1b[m\x1b[K   required from here\n'}
[2.596489] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:339:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class type> constexpr typename std::enable_if<std::is_convertible<type, const std::vector<double, std::allocator<double> >&>::value, const std::vector<double, std::allocator<double> >&>::type rclcpp::ParameterValue::get() const\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.596539] (rovc_comm_mqtt) StderrLine: {'line': b'  339 |   \x1b[01;36m\x1b[Kget\x1b[m\x1b[K() const\n'}
[2.596583] (rovc_comm_mqtt) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.596627] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:339:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.596675] (rovc_comm_mqtt) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class type> constexpr typename std::enable_if<std::is_convertible<type, const std::vector<double, std::allocator<double> >&>::value, const std::vector<double, std::allocator<double> >&>::type rclcpp::ParameterValue::get() const [with type = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.596725] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:239:49:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kauto rclcpp::detail::get_value_helper(const rclcpp::Parameter*) [with T = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.596771] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:274:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kdecltype(auto) rclcpp::Parameter::get_value() const [with T = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.596816] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:294:80:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kbool rclcpp::Node::get_parameter(const string&, ParameterT&) const [with ParameterT = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.596862] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:45:24:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid MqttBridgeNode::declare_and_subscribe(const string&, std::vector<std::shared_ptr<rclcpp::SubscriptionBase> >&) [with MsgType = std_msgs::msg::Float64_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.596909] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:26:50:\x1b[m\x1b[K   required from here\n'}
[2.596953] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:339:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, const std::vector<double, std::allocator<double> >&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.596999] (rovc_comm_mqtt) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kauto rclcpp::detail::get_value_helper(const rclcpp::Parameter*) [with T = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.597043] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:274:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kdecltype(auto) rclcpp::Parameter::get_value() const [with T = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.597089] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:294:80:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kbool rclcpp::Node::get_parameter(const string&, ParameterT&) const [with ParameterT = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.597145] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:45:24:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid MqttBridgeNode::declare_and_subscribe(const string&, std::vector<std::shared_ptr<rclcpp::SubscriptionBase> >&) [with MsgType = std_msgs::msg::Float64_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.597196] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:26:50:\x1b[m\x1b[K   required from here\n'}
[2.597244] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:349:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class type> constexpr typename std::enable_if<std::is_convertible<type, const std::vector<std::__cxx11::basic_string<char> >&>::value, const std::vector<std::__cxx11::basic_string<char> >&>::type rclcpp::ParameterValue::get() const\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.597292] (rovc_comm_mqtt) StderrLine: {'line': b'  349 |   \x1b[01;36m\x1b[Kget\x1b[m\x1b[K() const\n'}
[2.597336] (rovc_comm_mqtt) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.597381] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:349:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.597425] (rovc_comm_mqtt) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class type> constexpr typename std::enable_if<std::is_convertible<type, const std::vector<std::__cxx11::basic_string<char> >&>::value, const std::vector<std::__cxx11::basic_string<char> >&>::type rclcpp::ParameterValue::get() const [with type = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.597478] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:239:49:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kauto rclcpp::detail::get_value_helper(const rclcpp::Parameter*) [with T = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.597524] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter.hpp:274:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kdecltype(auto) rclcpp::Parameter::get_value() const [with T = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.597569] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:294:80:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kbool rclcpp::Node::get_parameter(const string&, ParameterT&) const [with ParameterT = std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.597615] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:45:24:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid MqttBridgeNode::declare_and_subscribe(const string&, std::vector<std::shared_ptr<rclcpp::SubscriptionBase> >&) [with MsgType = std_msgs::msg::Float64_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.597661] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/home/luka/ros2_diplpro/src/rovc_comm_mqtt/src/pub_node.cpp:26:50:\x1b[m\x1b[K   required from here\n'}
[2.597706] (rovc_comm_mqtt) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/parameter_value.hpp:349:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, const std::vector<std::__cxx11::basic_string<char> >&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.605533] (-) TimerEvent: {}
[2.705770] (-) TimerEvent: {}
[2.806021] (-) TimerEvent: {}
[2.906311] (-) TimerEvent: {}
[3.006564] (-) TimerEvent: {}
[3.106815] (-) TimerEvent: {}
[3.207067] (-) TimerEvent: {}
[3.307334] (-) TimerEvent: {}
[3.407591] (-) TimerEvent: {}
[3.507852] (-) TimerEvent: {}
[3.608106] (-) TimerEvent: {}
[3.708369] (-) TimerEvent: {}
[3.808626] (-) TimerEvent: {}
[3.908882] (-) TimerEvent: {}
[4.009145] (-) TimerEvent: {}
[4.109405] (-) TimerEvent: {}
[4.209664] (-) TimerEvent: {}
[4.309919] (-) TimerEvent: {}
[4.410177] (-) TimerEvent: {}
[4.510434] (-) TimerEvent: {}
[4.610676] (-) TimerEvent: {}
[4.710919] (-) TimerEvent: {}
[4.811172] (-) TimerEvent: {}
[4.911425] (-) TimerEvent: {}
[5.011675] (-) TimerEvent: {}
[5.111931] (-) TimerEvent: {}
[5.212186] (-) TimerEvent: {}
[5.312439] (-) TimerEvent: {}
[5.412693] (-) TimerEvent: {}
[5.512946] (-) TimerEvent: {}
[5.613186] (-) TimerEvent: {}
[5.713431] (-) TimerEvent: {}
[5.813694] (-) TimerEvent: {}
[5.913952] (-) TimerEvent: {}
[6.014223] (-) TimerEvent: {}
[6.114477] (-) TimerEvent: {}
[6.214744] (-) TimerEvent: {}
[6.315005] (-) TimerEvent: {}
[6.415272] (-) TimerEvent: {}
[6.434681] (rovc_comm_mqtt) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/pub_node.dir/build.make:76: CMakeFiles/pub_node.dir/src/pub_node.cpp.o] Error 1\n'}
[6.434898] (rovc_comm_mqtt) StderrLine: {'line': b'gmake[1]: *** [CMakeFiles/Makefile2:193: CMakeFiles/pub_node.dir/all] Error 2\n'}
[6.435062] (rovc_comm_mqtt) StderrLine: {'line': b'gmake: *** [Makefile:146: all] Error 2\n'}
[6.437093] (rovc_comm_mqtt) CommandEnded: {'returncode': 2}
[6.446921] (rovc_comm_mqtt) JobEnded: {'identifier': 'rovc_comm_mqtt', 'rc': 2}
[6.476566] (-) EventReactorShutdown: {}
